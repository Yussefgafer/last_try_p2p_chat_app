name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get Flutter version
      run: flutter --version
      
    - name: Clean project
      run: flutter clean
      
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: |
        flutter packages pub run build_runner build --delete-conflicting-outputs
        flutter gen-l10n
      continue-on-error: true
      
    - name: Run tests
      run: flutter test
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Build Release APK
      run: flutter build apk --release --split-per-abi
      
    - name: Build Release App Bundle
      run: flutter build appbundle --release
      
    - name: Sign APK
      if: env.KEYSTORE_FILE != ''
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        echo "Signing APK..."
        # APK signing would go here if keystore is available
        
    - name: Get build info
      id: build_info
      run: |
        echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "build_number=${{ github.run_number }}" >> $GITHUB_OUTPUT
        echo "commit_sha=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        
        # Get APK sizes
        echo "APK files:"
        find build/app/outputs/flutter-apk/ -name "*.apk" -exec ls -lh {} \;
        
        # Get total size
        TOTAL_SIZE=$(find build/app/outputs/flutter-apk/ -name "*.apk" -exec du -ch {} + | grep total | cut -f1)
        echo "total_size=$TOTAL_SIZE" >> $GITHUB_OUTPUT
        
    - name: Create Release Notes
      id: release_notes
      run: |
        cat > release_notes.md << EOF
        # P2P Chat Release ${{ steps.build_info.outputs.version }}
        
        ## 🚀 What's New
        - Complete P2P chat application with AI integration
        - End-to-end encryption for secure messaging
        - WebRTC and Bluetooth connectivity
        - Multi-language support (Arabic, Egyptian, English)
        - Material 3 design with RTL support
        
        ## 📱 Download
        - **Universal APK**: Works on all Android devices
        - **Split APKs**: Optimized for specific architectures
        - **App Bundle**: For Google Play Store
        
        ## 🔧 Technical Details
        - **Build Number**: ${{ steps.build_info.outputs.build_number }}
        - **Commit**: ${{ steps.build_info.outputs.commit_sha }}
        - **Total Size**: ${{ steps.build_info.outputs.total_size }}
        - **Flutter Version**: 3.24.0
        - **Target SDK**: Android 34
        - **Min SDK**: Android 21
        
        ## 🛡️ Security
        - All APKs are built from source code
        - End-to-end encryption enabled
        - No data collection or tracking
        
        ## 📋 Installation
        1. Download the appropriate APK for your device
        2. Enable "Install from unknown sources" in Android settings
        3. Install the APK
        4. Grant necessary permissions
        5. Add your Gemini API key in settings
        
        ## 🐛 Known Issues
        - Voice calls feature is in development
        - Video calls feature is in development
        - Some advanced P2P features may need refinement
        
        ## 📞 Support
        If you encounter any issues, please create an issue on GitHub.
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.build_info.outputs.version }}
        name: P2P Chat ${{ steps.build_info.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/bundle/release/*.aab
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ steps.build_info.outputs.version }}
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/bundle/release/*.aab
        retention-days: 90
        
  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: build-release
    if: always()
    
    steps:
    - name: Notify success
      if: needs.build-release.result == 'success'
      run: |
        echo "🎉 Release build completed successfully!"
        echo "Version: ${{ github.ref_name }}"
        echo "APKs and App Bundle are ready for distribution!"
        
    - name: Notify failure
      if: needs.build-release.result == 'failure'
      run: |
        echo "❌ Release build failed!"
        echo "Please check the logs and fix issues before retrying."
        exit 1
