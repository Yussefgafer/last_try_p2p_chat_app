name: Continuous Integration

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        flutter-version: ['3.24.0']
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Verify dependencies
      run: flutter pub deps
      
    - name: Generate code
      run: |
        flutter packages pub run build_runner build --delete-conflicting-outputs
        flutter gen-l10n
      continue-on-error: true
      
    - name: Run analyzer
      run: flutter analyze --fatal-infos
      
    - name: Check formatting
      run: dart format --set-exit-if-changed .
      
    - name: Run unit tests
      run: flutter test --coverage --reporter=expanded
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: |
        flutter packages pub run build_runner build --delete-conflicting-outputs
        flutter gen-l10n
      continue-on-error: true
      
    - name: Build APK
      run: flutter build apk --debug
      
    - name: Build App Bundle
      run: flutter build appbundle --debug
      
    - name: Verify build outputs
      run: |
        echo "Checking build outputs..."
        ls -la build/app/outputs/flutter-apk/
        ls -la build/app/outputs/bundle/debug/
        
        # Check APK size
        APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-debug.apk | cut -f1)
        echo "APK size: $APK_SIZE"
        
        # Check if APK is too large (warning if > 50MB)
        APK_SIZE_BYTES=$(du -b build/app/outputs/flutter-apk/app-debug.apk | cut -f1)
        if [ $APK_SIZE_BYTES -gt 52428800 ]; then
          echo "⚠️ Warning: APK size is larger than 50MB"
        fi
        
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Check for outdated dependencies
      run: flutter pub outdated
      continue-on-error: true
      
    - name: Analyze dependencies
      run: flutter pub deps --style=tree
      
    - name: Check for unused dependencies
      run: |
        echo "Checking for unused dependencies..."
        # This would require additional tooling
        
  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: |
        flutter packages pub run build_runner build --delete-conflicting-outputs
        flutter gen-l10n
      continue-on-error: true
      
    - name: Build for performance testing
      run: flutter build apk --profile
      
    - name: Analyze bundle size
      run: |
        echo "Analyzing app bundle size..."
        flutter build appbundle --analyze-size
        
  notify:
    name: Notify CI Status
    runs-on: ubuntu-latest
    needs: [test, build-test, security-check, dependency-check, performance-test]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.test.result == 'success' && needs.build-test.result == 'success'
      run: |
        echo "✅ All CI checks passed!"
        echo "Code quality: ✅"
        echo "Tests: ✅"
        echo "Build: ✅"
        echo "Security: ${{ needs.security-check.result == 'success' && '✅' || '⚠️' }}"
        
    - name: Notify failure
      if: needs.test.result == 'failure' || needs.build-test.result == 'failure'
      run: |
        echo "❌ CI checks failed!"
        echo "Tests: ${{ needs.test.result }}"
        echo "Build: ${{ needs.build-test.result }}"
        echo "Please fix the issues before merging."
        exit 1
